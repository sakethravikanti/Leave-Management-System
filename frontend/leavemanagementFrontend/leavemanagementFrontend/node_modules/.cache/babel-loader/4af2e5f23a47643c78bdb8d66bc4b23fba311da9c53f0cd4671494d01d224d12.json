{"ast":null,"code":"var _jsxFileName = \"E:\\\\elipse-workspace\\\\leavemanagementFrontend\\\\src\\\\components\\\\YearlyManagerReports.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/YearlyAttendance.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function YearlyManagerReports(managerId) {\n  _s();\n  const [report, setReport] = useState([]);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [currentYear] = useState(year);\n  useEffect(() => {\n    fetchReport(year);\n  }, [year]);\n  const fetchReport = async selectedYear => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/manager/getAssignedEmployeeReport`, {\n        params: {\n          employeeId: managerId,\n          year: 2025\n        },\n        withCredentials: true\n      });\n      setReport(response.data);\n    } catch (error) {\n      console.error(\"Error fetching report\", error);\n    }\n  };\n  const getMonthName = monthNum => {\n    return new Date(2000, monthNum - 1, 1).toLocaleString(\"default\", {\n      month: \"long\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yearly-attendance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"yearly-attendance-heading\",\n      children: [\"Yearly Attendance Report (\", year, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"mr-2\",\n        children: \"Select Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: year,\n        max: currentYear,\n        onChange: e => setYear(e.target.value),\n        className: \"border px-2 py-1 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), report.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-scroll-container\",\n      children: report.map((employeeData, idx) => {\n        const employeeId = Object.keys(employeeData)[0];\n        const monthlyList = employeeData[employeeId];\n        const monthlyAttendance = {};\n        monthlyList.forEach(item => {\n          const month = Object.keys(item)[0];\n          const days = Object.values(item)[0];\n          monthlyAttendance[month] = days;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-report-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee ID: \", employeeId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"attendance-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Working Days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(monthlyAttendance).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getMonthName(month)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: days\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)]\n              }, month, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(YearlyManagerReports, \"fMx3/zpZaFH0yxqMqsi6VAfWlDs=\");\n_c = YearlyManagerReports;\nvar _c;\n$RefreshReg$(_c, \"YearlyManagerReports\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","YearlyManagerReports","managerId","_s","report","setReport","year","setYear","Date","getFullYear","currentYear","fetchReport","selectedYear","response","get","params","employeeId","withCredentials","data","error","console","getMonthName","monthNum","toLocaleString","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","max","onChange","e","target","length","map","employeeData","idx","Object","keys","monthlyList","monthlyAttendance","forEach","item","days","values","entries","_c","$RefreshReg$"],"sources":["E:/elipse-workspace/leavemanagementFrontend/src/components/YearlyManagerReports.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/YearlyAttendance.css\";\r\n\r\n\r\nexport default function YearlyManagerReports(managerId) {\r\n  const [report, setReport] = useState([]);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const[currentYear] = useState(year);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchReport(year);\r\n  }, [year]);\r\n\r\n  const fetchReport = async (selectedYear) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/api/manager/getAssignedEmployeeReport`,\r\n        {\r\n          params: { employeeId:managerId , year: 2025 },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      setReport(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching report\", error);\r\n    }\r\n  };\r\n\r\n  const getMonthName = (monthNum) => {\r\n    return new Date(2000, monthNum - 1, 1).toLocaleString(\"default\", {\r\n      month: \"long\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"yearly-attendance-container\">\r\n      <h2 className=\"yearly-attendance-heading\">\r\n        Yearly Attendance Report ({year})\r\n      </h2>\r\n\r\n      <div className=\"year-selector\">\r\n        <label className=\"mr-2\">Select Year:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={year} max={currentYear}\r\n          onChange={(e) => setYear(e.target.value)}\r\n          className=\"border px-2 py-1 rounded\"\r\n        />\r\n      </div>\r\n\r\n      {report.length === 0 ? (\r\n        <p>No data available</p>\r\n      ) : (\r\n        <div className=\"report-scroll-container\">\r\n          {report.map((employeeData, idx) => {\r\n            const employeeId = Object.keys(employeeData)[0];\r\n            const monthlyList = employeeData[employeeId];\r\n\r\n            const monthlyAttendance = {};\r\n            monthlyList.forEach((item) => {\r\n              const month = Object.keys(item)[0];\r\n              const days = Object.values(item)[0];\r\n              monthlyAttendance[month] = days;\r\n            });\r\n\r\n            return (\r\n              <div\r\n                key={idx}\r\n                className=\"employee-report-card\"\r\n              >\r\n                <h3>Employee ID: {employeeId}</h3>\r\n                <table className=\"attendance-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Month</th>\r\n                      <th>Working Days</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {Object.entries(monthlyAttendance).map(([month, days]) => (\r\n                      <tr key={month}>\r\n                        <td>{getMonthName(month)}</td>\r\n                        <td className=\"text-center\">{days}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}