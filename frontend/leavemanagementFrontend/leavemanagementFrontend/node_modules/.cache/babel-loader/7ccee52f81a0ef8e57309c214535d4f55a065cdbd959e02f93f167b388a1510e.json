{"ast":null,"code":"var _jsxFileName = \"E:\\\\elipse-workspace\\\\leavemanagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport ManagerDashboard from \"./components/ManagerDashboard\";\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\nimport LoginPage from \"./pages/LoginPage\";\nimport { MessageProvider } from \"./context/MessageContext\";\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\n\n// Role-based route guard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequireAuth = ({\n  allowedRoles,\n  children\n}) => {\n  _s();\n  const {\n    user,\n    isAuthReady\n  } = useAuth(); // Get the new isAuthReady state\n  const role = user === null || user === void 0 ? void 0 : user.role;\n\n  // Wait until the auth state is ready before making a decision\n  if (!isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this); // Or a loading spinner\n  }\n\n  // Once ready, if no role exists, navigate to login\n  if (!role) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role exists but is not allowed, navigate to login\n  if (allowedRoles && !allowedRoles.includes(role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If all checks pass, render the children\n  return children;\n};\n_s(RequireAuth, \"SymFa3TG3djnxH9WuOkhV/u3xuE=\", false, function () {\n  return [useAuth];\n});\n_c = RequireAuth;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(MessageProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admindashboard/*\",\n            element: /*#__PURE__*/_jsxDEV(RequireAuth, {\n              allowedRoles: [\"ROLE_ADMIN\"],\n              children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/managerdashboard/*\",\n            element: /*#__PURE__*/_jsxDEV(RequireAuth, {\n              allowedRoles: [\"ROLE_MANAGER\"],\n              children: /*#__PURE__*/_jsxDEV(ManagerDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/employeedashboard/*\",\n            element: /*#__PURE__*/_jsxDEV(RequireAuth, {\n              allowedRoles: [\"ROLE_EMPLOYEE\", \"ROLE_MANAGER\", \"ROLE_ADMIN\"],\n              children: /*#__PURE__*/_jsxDEV(EmployeeDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RequireAuth\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AdminDashboard","ManagerDashboard","EmployeeDashboard","LoginPage","MessageProvider","AuthProvider","useAuth","jsxDEV","_jsxDEV","RequireAuth","allowedRoles","children","_s","user","isAuthReady","role","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","includes","_c","App","path","element","_c2","$RefreshReg$"],"sources":["E:/elipse-workspace/leavemanagementFrontend/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport ManagerDashboard from \"./components/ManagerDashboard\";\r\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport { MessageProvider } from \"./context/MessageContext\";\r\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\r\n\r\n// Role-based route guard\r\nconst RequireAuth = ({ allowedRoles, children }) => {\r\n  const { user, isAuthReady } = useAuth(); // Get the new isAuthReady state\r\n  const role = user?.role;\r\n\r\n  // Wait until the auth state is ready before making a decision\r\n  if (!isAuthReady) {\r\n    return <div>Loading...</div>; // Or a loading spinner\r\n  }\r\n\r\n  // Once ready, if no role exists, navigate to login\r\n  if (!role) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // If role exists but is not allowed, navigate to login\r\n  if (allowedRoles && !allowedRoles.includes(role)) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // If all checks pass, render the children\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <MessageProvider>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<LoginPage />} />\r\n\r\n            <Route\r\n              path=\"/admindashboard/*\"\r\n              element={\r\n                <RequireAuth allowedRoles={[\"ROLE_ADMIN\"]}>\r\n                  <AdminDashboard />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/managerdashboard/*\"\r\n              element={\r\n                <RequireAuth allowedRoles={[\"ROLE_MANAGER\"]}>\r\n                  <ManagerDashboard />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/employeedashboard/*\"\r\n              element={\r\n                <RequireAuth allowedRoles={[\"ROLE_EMPLOYEE\", \"ROLE_MANAGER\", \"ROLE_ADMIN\"]}>\r\n                  <EmployeeDashboard />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n          </Routes>\r\n        </Router>\r\n      </MessageProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}