{"ast":null,"code":"var _jsxFileName = \"E:\\\\elipse-workspace\\\\leavemanagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport ManagerDashboard from \"./components/ManagerDashboard\";\r\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\r\nimport LoginPage from \"./pages/Login\";\r\nimport { MessageProvider } from \"./context/MessageContext\";\r\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\r\n\r\n// ✅ Message Display Component\r\nconst MessageDisplay = () => {\r\n  const { message, messageType } = useAuth().useMessage ? useAuth().useMessage() : { message: '', messageType: '' };\r\n  return (\r\n    message && (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          padding: \"12px 20px\",\r\n          borderRadius: \"6px\",\r\n          color: \"#fff\",\r\n          backgroundColor: messageType === \"error\" ? \"#e74c3c\" : \"#2ecc71\",\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        {message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// Role-based route guard\r\nconst RequireAuth = ({ allowedRoles, children }) => {\r\n  const { user, isAuthReady } = useAuth();\r\n  const role = user?.role;\r\n\r\n  if (!isAuthReady) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!role) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  if (allowedRoles && !allowedRoles.includes(role)) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <MessageProvider>\r\n          {/* ✅ MessageDisplay added globally */\n/*   <MessageDisplay />\r\n     <Routes>\r\n     <Route path=\"/\" element={<LoginPage />} />\r\n       <Route\r\n       path=\"/admindashboard/*\"\r\n       element={\r\n         <RequireAuth allowedRoles={[\"ROLE_ADMIN\"]}>\r\n           <AdminDashboard />\r\n         </RequireAuth>\r\n       }\r\n     />\r\n       <Route\r\n       path=\"/managerdashboard/*\"\r\n       element={\r\n         <RequireAuth allowedRoles={[\"ROLE_MANAGER\"]}>\r\n           <ManagerDashboard />\r\n         </RequireAuth>\r\n       }\r\n     />\r\n       <Route\r\n       path=\"/employeedashboard/*\"\r\n       element={\r\n         <RequireAuth allowedRoles={[\"ROLE_EMPLOYEE\", \"ROLE_MANAGER\", \"ROLE_ADMIN\"]}>\r\n           <EmployeeDashboard />\r\n         </RequireAuth>\r\n       }\r\n     />\r\n   </Routes>\r\n </MessageProvider>\r\n</AuthProvider>\r\n</Router>\r\n);\r\n}\r\nexport default App;*/\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { useAuth } from \"./context/AuthContext\";\nimport MessageDisplay from \"./context/MessageDisplay\";\nimport LoginPage from \"./components/LoginPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    authUser\n  } = useAuth(); // ✅ Always at top\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(MessageDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: authUser ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m/z0l/zAncIulG0wSKI2xbDWW5g=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","useAuth","MessageDisplay","LoginPage","Dashboard","jsxDEV","_jsxDEV","App","_s","authUser","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["E:/elipse-workspace/leavemanagementFrontend/src/App.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport ManagerDashboard from \"./components/ManagerDashboard\";\r\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\r\nimport LoginPage from \"./pages/Login\";\r\nimport { MessageProvider } from \"./context/MessageContext\";\r\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\r\n\r\n// ✅ Message Display Component\r\nconst MessageDisplay = () => {\r\n  const { message, messageType } = useAuth().useMessage ? useAuth().useMessage() : { message: '', messageType: '' };\r\n  return (\r\n    message && (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          padding: \"12px 20px\",\r\n          borderRadius: \"6px\",\r\n          color: \"#fff\",\r\n          backgroundColor: messageType === \"error\" ? \"#e74c3c\" : \"#2ecc71\",\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        {message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// Role-based route guard\r\nconst RequireAuth = ({ allowedRoles, children }) => {\r\n  const { user, isAuthReady } = useAuth();\r\n  const role = user?.role;\r\n\r\n  if (!isAuthReady) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!role) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  if (allowedRoles && !allowedRoles.includes(role)) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <MessageProvider>\r\n          {/* ✅ MessageDisplay added globally */\r\n       /*   <MessageDisplay />\r\n\r\n          <Routes>\r\n            <Route path=\"/\" element={<LoginPage />} />\r\n\r\n            <Route\r\n              path=\"/admindashboard/*\"\r\n              element={\r\n                <RequireAuth allowedRoles={[\"ROLE_ADMIN\"]}>\r\n                  <AdminDashboard />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/managerdashboard/*\"\r\n              element={\r\n                <RequireAuth allowedRoles={[\"ROLE_MANAGER\"]}>\r\n                  <ManagerDashboard />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/employeedashboard/*\"\r\n              element={\r\n                <RequireAuth allowedRoles={[\"ROLE_EMPLOYEE\", \"ROLE_MANAGER\", \"ROLE_ADMIN\"]}>\r\n                  <EmployeeDashboard />\r\n                </RequireAuth>\r\n              }\r\n            />\r\n          </Routes>\r\n        </MessageProvider>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport MessageDisplay from \"./context/MessageDisplay\";\r\n\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nfunction App() {\r\n  const { authUser } = useAuth(); // ✅ Always at top\r\n\r\n  return (\r\n    <Router>\r\n      {/* Global message display */}\r\n      <MessageDisplay />\r\n\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={authUser ? <Dashboard /> : <Navigate to=\"/login\" />}\r\n        />\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAOC,cAAc,MAAM,0BAA0B;AAErD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC;EAAS,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEhC,oBACEK,OAAA,CAACT,MAAM;IAAAa,QAAA,gBAELJ,OAAA,CAACJ,cAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElBR,OAAA,CAACR,MAAM;MAAAY,QAAA,gBACLJ,OAAA,CAACP,KAAK;QACJgB,IAAI,EAAC,GAAG;QACRC,OAAO,EAAEP,QAAQ,gBAAGH,OAAA,CAACF,SAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGR,OAAA,CAACN,QAAQ;UAACiB,EAAE,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACFR,OAAA,CAACP,KAAK;QAACgB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEV,OAAA,CAACH,SAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACN,EAAA,CAjBQD,GAAG;EAAA,QACWN,OAAO;AAAA;AAAAiB,EAAA,GADrBX,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}