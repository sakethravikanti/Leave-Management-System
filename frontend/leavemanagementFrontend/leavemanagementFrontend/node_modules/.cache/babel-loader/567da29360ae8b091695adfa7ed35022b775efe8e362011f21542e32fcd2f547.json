{"ast":null,"code":"var _jsxFileName = \"E:\\\\elipse-workspace\\\\leavemanagementFrontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    showPassword: false\n  });\n  const [errors, setErrors] = useState({});\n  const [serverError, setServerError] = useState(\"\");\n\n  // âœ… Inline validation (runs on every change)\n  const validateField = (name, value) => {\n    let error = \"\";\n    if (name === \"email\") {\n      if (!value) error = \"Email is required\";else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Enter a valid email\";\n    }\n    if (name === \"password\") {\n      if (!value) error = \"Password is required\";else if (value.length < 6) error = \"Password must be at least 6 characters\";else if (!/[0-9]/.test(value)) error = \"Password must contain at least one number\";\n    }\n    return error;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n\n    // âœ… validate as user types\n    setErrors(prev => ({\n      ...prev,\n      [name]: validateField(name, newValue)\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // âœ… final validation\n    const newErrors = {\n      email: validateField(\"email\", formData.email),\n      password: validateField(\"password\", formData.password)\n    };\n    setErrors(newErrors);\n    if (!newErrors.email && !newErrors.password) {\n      try {\n        // ðŸ”¹ Replace this mock with your backend login API call\n        const mockResponse = {\n          email: formData.email,\n          role: formData.email.includes(\"admin\") ? \"admin\" : formData.email.includes(\"manager\") ? \"manager\" : \"employee\",\n          token: \"mock-token\"\n        };\n        login(mockResponse);\n        setServerError(\"\");\n\n        // âœ… Redirect based on role\n        if (mockResponse.role === \"admin\") navigate(\"/admindashboard\");else if (mockResponse.role === \"manager\") navigate(\"/managerdashboard\");else navigate(\"/employeedashboard\");\n      } catch (err) {\n        setServerError(\"Invalid email or password\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error server-error\",\n        children: serverError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          className: errors.email ? \"input-error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: formData.showPassword ? \"text\" : \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          className: errors.password ? \"input-error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"showPassword\",\n          checked: formData.showPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"xgt82J1AfhAjG/cruC1qlVIaOMw=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useAuth","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","login","navigate","formData","setFormData","email","password","showPassword","errors","setErrors","serverError","setServerError","validateField","name","value","error","test","length","handleChange","e","type","checked","target","newValue","prev","handleSubmit","preventDefault","newErrors","mockResponse","role","includes","token","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["E:/elipse-workspace/leavemanagementFrontend/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Login.css\";\r\n\r\nconst LoginPage = () => {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [serverError, setServerError] = useState(\"\");\r\n\r\n  // âœ… Inline validation (runs on every change)\r\n  const validateField = (name, value) => {\r\n    let error = \"\";\r\n\r\n    if (name === \"email\") {\r\n      if (!value) error = \"Email is required\";\r\n      else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Enter a valid email\";\r\n    }\r\n\r\n    if (name === \"password\") {\r\n      if (!value) error = \"Password is required\";\r\n      else if (value.length < 6) error = \"Password must be at least 6 characters\";\r\n      else if (!/[0-9]/.test(value)) error = \"Password must contain at least one number\";\r\n    }\r\n\r\n    return error;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: newValue,\r\n    }));\r\n\r\n    // âœ… validate as user types\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: validateField(name, newValue),\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // âœ… final validation\r\n    const newErrors = {\r\n      email: validateField(\"email\", formData.email),\r\n      password: validateField(\"password\", formData.password),\r\n    };\r\n    setErrors(newErrors);\r\n\r\n    if (!newErrors.email && !newErrors.password) {\r\n      try {\r\n        // ðŸ”¹ Replace this mock with your backend login API call\r\n        const mockResponse = {\r\n          email: formData.email,\r\n          role:\r\n            formData.email.includes(\"admin\") ? \"admin\" :\r\n            formData.email.includes(\"manager\") ? \"manager\" :\r\n            \"employee\",\r\n          token: \"mock-token\",\r\n        };\r\n\r\n        login(mockResponse);\r\n        setServerError(\"\");\r\n\r\n        // âœ… Redirect based on role\r\n        if (mockResponse.role === \"admin\") navigate(\"/admindashboard\");\r\n        else if (mockResponse.role === \"manager\") navigate(\"/managerdashboard\");\r\n        else navigate(\"/employeedashboard\");\r\n      } catch (err) {\r\n        setServerError(\"Invalid email or password\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"login-title\">Login</h2>\r\n\r\n        {serverError && <div className=\"error server-error\">{serverError}</div>}\r\n\r\n        {/* Email */}\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className={errors.email ? \"input-error\" : \"\"}\r\n          />\r\n          {errors.email && <span className=\"error\">{errors.email}</span>}\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type={formData.showPassword ? \"text\" : \"password\"}\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className={errors.password ? \"input-error\" : \"\"}\r\n          />\r\n          {errors.password && <span className=\"error\">{errors.password}</span>}\r\n        </div>\r\n\r\n        {/* Show Password */}\r\n        <div className=\"form-group checkbox-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"showPassword\"\r\n            checked={formData.showPassword}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Show Password</label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"login-btn\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}