{"ast":null,"code":"var _jsxFileName = \"E:\\\\elipse-workspace\\\\leavemanagementFrontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.jsx\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [formMessage, setFormMessage] = useState(null);\n\n  // Inline validation\n  const validateField = (name, value) => {\n    let error = \"\";\n    if (name === \"email\") {\n      if (!value) error = \"Email is required\";else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Invalid email format\";\n    }\n    if (name === \"password\") {\n      if (!value) error = \"Password is required\";else if (value.length < 6) error = \"Password must be at least 6 characters\";\n    }\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    validateField(name, value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let valid = true;\n    Object.keys(formData).forEach(key => {\n      validateField(key, formData[key]);\n      if (!formData[key] || errors[key]) valid = false;\n    });\n    if (!valid) return;\n    try {\n      const userData = await login(formData.email, formData.password);\n      setFormMessage({\n        type: \"success\",\n        text: \"Login successful!\"\n      });\n\n      // Navigate based on role\n      if (userData.role === \"ROLE_ADMIN\") navigate(\"/admindashboard\");else if (userData.role === \"ROLE_MANAGER\") navigate(\"/managerdashboard\");else navigate(\"/employeedashboard\");\n    } catch (error) {\n      setFormMessage({\n        type: \"error\",\n        text: \"Invalid email or password\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), formMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${formMessage.type === \"error\" ? \"message-box-error\" : \"message-box-success\"}`,\n        children: formMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            className: `input-field ${errors.email ? \"input-error\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            className: `input-field ${errors.password ? \"input-error\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showPassword\",\n            checked: showPassword,\n            onChange: () => setShowPassword(!showPassword)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"showPassword\",\n            children: \"Show Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JwNUpQyPkGh1J2I8G9MubZx+Pd8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","login","navigate","formData","setFormData","email","password","errors","setErrors","showPassword","setShowPassword","formMessage","setFormMessage","validateField","name","value","error","test","length","prev","handleChange","e","target","handleSubmit","preventDefault","valid","Object","keys","forEach","key","userData","type","text","role","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","id","checked","htmlFor","_c","$RefreshReg$"],"sources":["E:/elipse-workspace/leavemanagementFrontend/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Login.css\";\r\n\r\nconst LoginPage = () => {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [formMessage, setFormMessage] = useState(null);\r\n\r\n  // Inline validation\r\n  const validateField = (name, value) => {\r\n    let error = \"\";\r\n    if (name === \"email\") {\r\n      if (!value) error = \"Email is required\";\r\n      else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Invalid email format\";\r\n    }\r\n    if (name === \"password\") {\r\n      if (!value) error = \"Password is required\";\r\n      else if (value.length < 6) error = \"Password must be at least 6 characters\";\r\n    }\r\n    setErrors((prev) => ({ ...prev, [name]: error }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    validateField(name, value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let valid = true;\r\n    Object.keys(formData).forEach((key) => {\r\n      validateField(key, formData[key]);\r\n      if (!formData[key] || errors[key]) valid = false;\r\n    });\r\n\r\n    if (!valid) return;\r\n\r\n    try {\r\n      const userData = await login(formData.email, formData.password);\r\n\r\n      setFormMessage({ type: \"success\", text: \"Login successful!\" });\r\n\r\n      // Navigate based on role\r\n      if (userData.role === \"ROLE_ADMIN\") navigate(\"/admindashboard\");\r\n      else if (userData.role === \"ROLE_MANAGER\") navigate(\"/managerdashboard\");\r\n      else navigate(\"/employeedashboard\");\r\n    } catch (error) {\r\n      setFormMessage({ type: \"error\", text: \"Invalid email or password\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h2 className=\"login-title\">Login</h2>\r\n\r\n        {formMessage && (\r\n          <div\r\n            className={`message-box ${\r\n              formMessage.type === \"error\"\r\n                ? \"message-box-error\"\r\n                : \"message-box-success\"\r\n            }`}\r\n          >\r\n            {formMessage.text}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          {/* Email */}\r\n          <div>\r\n            <label className=\"input-label\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className={`input-field ${errors.email ? \"input-error\" : \"\"}`}\r\n            />\r\n            {errors.email && <p className=\"error-text\">{errors.email}</p>}\r\n          </div>\r\n\r\n          {/* Password */}\r\n          <div>\r\n            <label className=\"input-label\">Password</label>\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              className={`input-field ${errors.password ? \"input-error\" : \"\"}`}\r\n            />\r\n            {errors.password && <p className=\"error-text\">{errors.password}</p>}\r\n          </div>\r\n\r\n          {/* Show password checkbox */}\r\n          <div className=\"checkbox-wrapper\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"showPassword\"\r\n              checked={showPassword}\r\n              onChange={() => setShowPassword(!showPassword)}\r\n            />\r\n            <label htmlFor=\"showPassword\">Show Password</label>\r\n          </div>\r\n\r\n          {/* Submit button */}\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}